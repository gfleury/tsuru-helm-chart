apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "tsuru.fullname" . }}-kubernetes-router
  labels:
    app: {{ template "tsuru.name" . }}-kubernetes-router
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas.router }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "tsuru.name" . }}-kubernetes-router
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.rbac.create }}
      serviceAccountName: {{ template "tsuru.fullname" . }}-kubernetes-router
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-kubernetes-router
        image: gfleury/kubernetes-router
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8077
            scheme: HTTP
          timeoutSeconds: 5
        command: ["./kubernetes-router"]
        args: ["-v", "3", "-controller-mode", "ingressNginx", "-ingress-domain", "{{ .Values.ingress.domain }}", "-k8s-namespace", "tsuru" ]
        ports:
        - containerPort: 8077
